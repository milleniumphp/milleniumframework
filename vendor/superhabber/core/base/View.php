<?php
namespace mill\core\base;

use \mill\core\App;

/**
 * !DO NOT EDIT this file without knowledge of what you are doing
 * @author Yaroslav Palamarchuk
 */
class View {

    /**
     * for real route
     * @var $route array
     * */
    public $route = [];

    /**
     * for view file 
     * @var $view string
     * */
    public $view;

    /**
     * for layout file
     * @var $layout string
     * */
    public $layout;

    /**
     * title of page
     * @var string 
     */
    public $title;

    /**
     * description of page
     * @var string 
     */
    public $description;

    /**
     * keywords of page 
     * @var string 
     */
    public $keywords;

    /**
     * css and js files
     * @var array 
     */
    //public $scripts = [];
    
    public $scripts;

    /**
     * register view and layout
     * @param array $route for real routes
     * */
    public function __construct($route, $layout = '', $view = '') {
        $this->scripts = new \mill\web\Scripts();
        $this->route = $route;
        if ($layout === false) {
            $this->layout = false;
        } else {
            $this->layout = $layout ?: LAYOUT;
        }
        $this->view = $view;

    }

    protected function compressPage($buffer) {
        return preg_replace(\mill\web\Scripts::$searchMin, \mill\web\Scripts::$replaceMin, $buffer);
    }

    /**
     * for variables from controller to view
     * @param array $vars for variables
     * */
    public function render($vars, $metatags) {
        Language::load(App::$bin->getProperty('lang')['code'], $this->route);
        $this->route['prefix'] = str_replace('\\', '/', $this->route['prefix']);
        //if variables in array get it
        if (is_array($vars))
            extract($vars);
        /**
         * view file name
         * @var string
         */
        if($this->route['prefix'] == true){
            $file_view = SECTIONS . "/{$this->route['prefix']}views/{$this->route['controller']}/{$this->view}.php";
        }else{
            $file_view = APP . "/views/{$this->route['prefix']}{$this->route['controller']}/{$this->view}.php";
        }
        if(GZIP){
            ob_start([$this, 'compressPage']);
        }else{
            ob_start();
        }

        //if file exists
        if (is_file($file_view)) {
            require $file_view;
        } else {
            throw new \Exception("<b>View {$file_view} not found</b>", 404);
        }
        /**
         * content from view file
         * @var string
         */
        $content = ob_get_contents();
        ob_clean();

        $this->title = $metatags['title'];
        $this->description = $metatags['description'];
        $this->keywords = $metatags['keywords'];

        if (false !== $this->layout) {
            /**
             * layout file full path
             * @var string
             */
            if($this->route['prefix']){
                $file_layout = SECTIONS . "/{$this->route['prefix']}views/layouts/{$this->layout}.php";
            }else{
                $file_layout = APP . "/views/layouts/{$this->layout}.php";
            }
            
            if (is_file($file_layout)) {
                require $file_layout;
            } else {
                throw new \Exception('<b>Layout '. $file_layout . ' not found</b>', 404);
            }
        }else{
            echo $content;
        }
    }
}
